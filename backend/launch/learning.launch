<?xml version="1.0"?>
<launch>
    <!--Go-related port definition until goroslib corrected-->
    <arg name="port" default="11311" />
    <!--Input arguments-->
    <arg name="paused" default="False"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>
    
    <!--Exp. series name defines database where learning results will be stored.
        It has to be replaced manually or in the -->
    <param name="exp_series_name" type="str" value="manual_launch" />

    <!-- Spawn world-->
    <include file="$(find simulation)/launch/simulation.launch">
        <arg name="debug" value="$(arg debug)"/>
        <arg name="gui" value="$(arg gui)"/>
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
        <arg name="headless" value="$(arg headless)"/>
    </include>

    <!-- Spawn robot-->
    <include file="$(find simulation)/launch/spawn.launch">
        <arg name="debug" value="$(arg debug)"/>
        <arg name="gui" value="$(arg gui)"/>
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
        <arg name="headless" value="$(arg headless)"/>
    </include>

    <!-- Start perception-->
    <include file="$(find perception)/launch/perception.launch">
        <arg name="debug" value="$(arg debug)"/>
        <arg name="gui" value="$(arg gui)"/>
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
        <arg name="headless" value="$(arg headless)"/>
        <arg name="port" value="$(arg port)"/>
    </include>

    <!-- Nodes -->
    <!-- Write to database -->
    <node name="database_writer" pkg="backend" type="db_writer_app" output="screen" args="$(arg port)"/>
    <!-- Monitor progress -->
    <node name="monitor" pkg="monitor" type="monitor_app.py" output="screen" args="$(arg port)"/>
    <!-- Robot control -->
    <node name="control" pkg="control" type="control_app" output="screen" args="$(arg port)"/>
    <!-- Safety estimation -->
    <node name="safety" pkg="monitor" type="safety.py" output="screen" args="$(arg port)"/>
</launch>
